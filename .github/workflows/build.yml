name: Build and Test
on:
  push:         
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    env:
      SONAR_SCANNER_VERSION: 4.7.0.2747
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: /home/runner/target_ws/
      ISOLATION: "shell"

    steps:

      - uses: ros-tooling/setup-ros@v0.3
        with:
          required-ros-distributions: rolling

      - name: dependencies
        run: |

          # Add ROS 2 GPG key
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg || exit $?

          # Add ROS 2 repository to the source list
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null || exit $?

          # Install required tools
          sudo apt update && sudo apt install -y \
            python3-colcon-common-extensions \
            python3-rosdep || exit $?

          # Initialize rosdep
          sudo rosdep init || true

          # Install ROS 2 workspace dependencies
          rosdep update && rosdep install -y --rosdistro "rolling" --from-paths . --ignore-src || true

          mkdir /home/runner/target_ws/ || true

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      
      - name: Download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        run: |
          curl -sSLo /home/runner/target_ws/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }} 
          unzip -o /home/runner/target_ws/sonar-scanner.zip -d /home/runner/target_ws/
          echo "/home/runner/target_ws/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH
    
      - name: Download and set up build-wrapper
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        run: |
          curl -sSLo /home/runner/target_ws/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
          unzip -o /home/runner/target_ws/build-wrapper-linux-x86.zip -d /home/runner/target_ws/
          echo "/home/runner/target_ws/build-wrapper-linux-x86" >> $GITHUB_PATH
     
      - name: moving
        run : |
          mkdir /home/runner/target_ws/src/
          cd /home/runner/target_ws/src/

      - name: Checking out
        uses: actions/checkout@v2.3.4
        with:
          submodules: recursive
          

      - name: Run build-wrapper
        run: |
          cp -r  /home/runner/work/ros2_sonarcloud/ros2_sonarcloud/ /home/runner/target_ws/src/
          cd /home/runner/target_ws/
          wget https://raw.githubusercontent.com/ros2/ros2/rolling/ros2.repos
          vcs import src < ros2.repos
          source /opt/ros/rolling/setup.bash
          ./build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir .  colcon build  --executor parallel --continue-on-error || true
          # build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }}  colcon build  --executor parallel --continue-on-error   
          
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd /home/runner/target_ws/
          sonar-scanner --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" \
            -Dsonar.projectKey=muttistefano_ros2_sonarcloud \
            -Dsonar.organization=muttistefano \
            -Dsonar.cfamily.threads=2 \
            -Dsonar.projectBaseDir=/home/runner/target_ws/ \
            -Dsonar.sources=src
            
      - name: cccc action step
        uses: sarnold/cccc-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: upload metrics report
        uses: actions/upload-artifact@v2
        with:
          name: metrics
          path: ./metrics